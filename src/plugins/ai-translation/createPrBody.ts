export type TranslateIssueType = 'Resolved' | 'Pending';

type TranslationIssueStatus = { number: number; type: TranslateIssueType };

export const createPrBody = (issueStatus: TranslationIssueStatus[]): string => {
  const pendingIssueComments = issueStatus
    .filter(({ type }) => type === 'Pending')
    .map(createIssueComment);
  const resolvedIssueComments = issueStatus
    .filter(({ type }) => type === 'Resolved')
    .map(createIssueComment);

  return `
## 🤖 AI Translation Batch

This PR contains automated translations generated by AI.

### Pending Issues
${pendingIssueComments.join('\n')}

### Resolved Issues
${resolvedIssueComments.join('\n')}

### ⚠️ Important Notice
**DO NOT EDIT THIS PR MANUALLY**
This PR is automatically managed by the AI translation plugin. Manual changes will be overwritten.

---
*Generated by [Yuki-no AI Translation Plugin](https://github.com/Gumball12/yuki-no/tree/main/src/plugins/ai-translation/)*
`;
};

const createIssueComment = (issueStatus: TranslationIssueStatus): string =>
  `${issueStatus.type} #${issueStatus.number}`;
